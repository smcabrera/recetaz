= form_for [@recipe, @recipe.recipe_ingredients.build] do |f|
  %h4 Ingredients
  %table
    - @recipe.recipe_ingredients.each do |recipe_ingredient|
      - if recipe_ingredient.ingredient # TODO: Stupid nil check. It turns out that because we just built a recipe_ingredient object for the form, the last recipe_ingredient will have nil for all its attributes. We don't want to deal with the new one here so we  have to check for nil.
        -#This seems like an inelegant way around the issue, but it works.
        %tr{:id => "recipe-ingredient-#{recipe_ingredient.id}" }
          %td= recipe_ingredient.ingredient.name
          -# TODO: I'd like this to work where the current amount appears as default. I think for that I'll need the right kind of form helper (which is not select)
          %td= f.select :ingredient_amount, (1..10).to_a, class: 'form-control'
          %td= link_to "X", [@recipe, recipe_ingredient],  method: :delete, remote: true

  .form-group
    = f.label :add_ingredient
    = f.label :amount
    = f.collection_select :ingredient_id, Ingredient.all, :id, :name, class: 'form-control'
    = f.select :ingredient_amount, (1..10).to_a, class: 'form-control'
  .actions
    = f.submit 'Save', class: 'btn btn-default'

  -#%h4= Recipe.first.recipe_ingredients.first.ingredient.name
  -#%h4= link_to "X", [Recipe.first, Recipe.first.recipe_ingredients.first],  method: :delete, remote: true
